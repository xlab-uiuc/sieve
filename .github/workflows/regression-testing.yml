# This file is automatically generated by gen_github_action.py on 2023-03-03 16:08:42.008199
name: Regression Testing
'on':
  pull_request: null
  workflow_dispatch: null
env:
  IMAGE_NAMESPACE: ghcr.io/sieve-project/action
jobs:
  cassandra-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.19
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go install sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_conditional_wait_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c examples/cassandra-operator/ -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c examples/cassandra-operator/ -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c examples/cassandra-operator/ -m vanilla -r $IMAGE_NAMESPACE
  casskop-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.19
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go install sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_conditional_wait_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c examples/casskop-operator/ -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c examples/casskop-operator/ -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c examples/casskop-operator/ -m vanilla -r $IMAGE_NAMESPACE
  mongodb-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.19
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go install sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_conditional_wait_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c examples/mongodb-operator/ -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c examples/mongodb-operator/ -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c examples/mongodb-operator/ -m vanilla -r $IMAGE_NAMESPACE
  nifikop-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.19
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go install sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_conditional_wait_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c examples/nifikop-operator/ -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c examples/nifikop-operator/ -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c examples/nifikop-operator/ -m vanilla -r $IMAGE_NAMESPACE
  rabbitmq-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.19
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go install sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_conditional_wait_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c examples/rabbitmq-operator/ -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c examples/rabbitmq-operator/ -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c examples/rabbitmq-operator/ -m vanilla -r $IMAGE_NAMESPACE
  xtradb-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.19
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go install sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_conditional_wait_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c examples/xtradb-operator/ -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c examples/xtradb-operator/ -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c examples/xtradb-operator/ -m vanilla -r $IMAGE_NAMESPACE
  yugabyte-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.19
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go install sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_conditional_wait_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c examples/yugabyte-operator/ -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c examples/yugabyte-operator/ -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c examples/yugabyte-operator/ -m vanilla -r $IMAGE_NAMESPACE
  zookeeper-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.19
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go install sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_conditional_wait_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c examples/zookeeper-operator/ -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c examples/zookeeper-operator/ -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c examples/zookeeper-operator/ -m vanilla -r $IMAGE_NAMESPACE
